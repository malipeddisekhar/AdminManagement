spring.application.name=externalAPI
server.port=1234
spring.datasource.url=jdbc:mysql://localhost:3306/api
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=20,expireAfterWrite=1m


# 🔍 What Happens When You Cache a 3rd Value?
# Let’s say your service uses:

# java
# Copy
# Edit
# @Cacheable(value = "hii", key = "#name")
# public String searchStudent(String name) { ... }
# And your cache has:

# name = "Alice" → 1st entry

# name = "Bob" → 2nd entry

# Now you call:

# name = "Charlie" → 3rd entry

# ✅ At this point, Caffeine will evict the least recently used (LRU) entry. So for example:

# Cache Key	Result
# Alice	❌ Evicted (if least recently used)
# Bob	✅ Still cached
# Charlie	✅ Just added